# SPDX-FileCopyrightText: 2024 Frans van Dorsselaer
#
# SPDX-License-Identifier: MIT

---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

# This workflow checks if the given runtime parameter is valid. If it is, it tries to
# retrieve the cache. If the cached runtime does not exist, it will rebuild it by
# calling the applicable runtime build workflow.

# TODO: Make the specific runtime a parameter (for now: test with linux-x64).

name: Cache runtime

on:
  workflow_dispatch:
    inputs:
      runtime:
        description: 'A runtime identifier (RID)'
        required: true
        type: string

  workflow_call:
    inputs:
      runtime:
        description: 'A runtime identifier (RID)'
        required: true
        type: string

permissions:
  contents: read

env:
  runtime-workflow: .github/workflows/runtime-${{ inputs.runtime }}.yml

jobs:
  check-cache:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Validate runtime identifier
        if: ${{ hashFiles(env.runtime-workflow) }} == ''
        run: |
          exit 1

      - name: Copy build workflow
        run: |
          cp ${{ env.runtime-workflow }} .github/workflows/build-runtime.yml

      - name: Check existing cache
        id: cache
        uses: actions/cache/restore@v4
        with:
          path: |
            Native/runtimes/**
          key: runtime-${{ inputs.runtime }}-${{ hashFiles('.gitmodules', env.runtime-workflow) }}
          enableCrossOsArchive: true
          lookup-only: true

    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}

  build-runtime:
    needs: check-cache
    if: needs.check-cache.outputs.cache-hit != 'true'
    uses: ./.github/workflows/build-runtime.yml
