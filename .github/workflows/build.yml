# SPDX-FileCopyrightText: 2024 Frans van Dorsselaer
#
# SPDX-License-Identifier: MIT

---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-win-x64:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Configure
        run: >
          cmake
          -S xmss-library
          -B build
          -DXMSS_C99_COMPATIBLE=OFF
          -DBUILD_SHARED_LIBS=ON

      - name: Build
        run: cmake --build build --config Release

      - name: Test
        working-directory: build
        run: ctest --build-config Release

      - name: Copy artifact
        run: |
          mkdir Native\runtimes\win-x64\native
          copy build\src\Release\xmss.dll Native\runtimes\win-x64\native\

      - name: Cache artifact
        uses: actions/cache/save@v4
        with:
          path: |
            Native/runtimes/**
          key: cache-win-x64-${{ github.run_id }}
          enableCrossOsArchive: true

  build-linux-x64:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Configure
        run: >
          cmake
          -S xmss-library
          -B build
          -DCMAKE_C_COMPILER=clang
          -DXMSS_C99_COMPATIBLE=OFF
          -DBUILD_SHARED_LIBS=ON

      - name: Build
        run: cmake --build build

      - name: Test
        working-directory: build
        run: ctest

      - name: Copy artifact
        run: |
          mkdir -p Native/runtimes/linux-x64/native
          cp build/src/libxmss.so Native/runtimes/linux-x64/native/xmss.so

      - name: Save artifact
        uses: actions/cache/save@v4
        with:
          path: |
            Native/runtimes/**
          key: cache-linux-x64-${{ github.run_id }}
          enableCrossOsArchive: true

  build-dotnet:
    needs:
      - build-win-x64
      - build-linux-x64

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore win-x64 artifact
        uses: actions/cache/restore@v4
        with:
          path: |
            Native/runtimes/**
          key: cache-win-x64-${{ github.run_id }}
          fail-on-cache-miss: true

      - name: Restore linux-x64 artifact
        uses: actions/cache/restore@v4
        with:
          path: |
            Native/runtimes/**
          key: cache-linux-x64-${{ github.run_id }}
          fail-on-cache-miss: true

      - name: Setup .NET
        uses: actions/setup-dotnet@v4

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --configuration Release --no-build
